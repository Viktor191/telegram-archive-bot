import { Api, TelegramClient } from "telegram";
import { markMessageAsRemoved } from "../utils/markMessageAsRemoved";

export const handleDeletedMessage = async (client: TelegramClient) => {
    client.addEventHandler((update: any) => {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –æ–±—ã—á–Ω—ã—Ö —á–∞—Ç–∞—Ö –∏ –≥—Ä—É–ø–ø–∞—Ö
        if (update instanceof Api.UpdateDeleteMessages) {
            update.messages.forEach((msgId: number) => {
                const updatedMessages = markMessageAsRemoved(msgId);
                if (updatedMessages && updatedMessages.length > 0) {
                    updatedMessages.forEach((msg: any) => {
                        console.log("üì® –£–¥–∞–ª–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è:", msg);
                    });
                } else {
                    console.warn(`–°–æ–æ–±—â–µ–Ω–∏—è —Å messageId ${msgId} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.`);
                }
            });
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–∞—Ö
        if (update instanceof Api.UpdateDeleteChannelMessages) {
            update.messages.forEach((msgId: number) => {
                const updatedMessages = markMessageAsRemoved(msgId);
                if (updatedMessages && updatedMessages.length > 0) {
                    updatedMessages.forEach((msg: any) => {
                        console.log("üì® –£–¥–∞–ª–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è:", msg);
                    });
                } else {
                    console.warn(`–°–æ–æ–±—â–µ–Ω–∏—è —Å messageId ${msgId} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.`);
                }
            });
        }
    });
};