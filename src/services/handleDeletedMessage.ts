import { Api, TelegramClient } from "telegram";
import { markMessageAsRemoved } from "../utils/markMessageAsRemoved";
import { saveMessageToFile } from "./saveMessageToFile";

export const handleDeletedMessage = async (client: TelegramClient) => {
    client.addEventHandler((update: any) => {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –æ–±—ã—á–Ω—ã—Ö —á–∞—Ç–∞—Ö –∏ –≥—Ä—É–ø–ø–∞—Ö
        if (update instanceof Api.UpdateDeleteMessages) {
            update.messages.forEach((msgId: number) => {
                const updatedMessage = markMessageAsRemoved(msgId);
                if (updatedMessage) {
                    console.log("üì® –£–¥–∞–ª–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è:", updatedMessage);
                }
            });
            // –ú–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            /*saveMessageToFile({
                type: "deleted",
                messages: update.messages,
                timestamp: new Date().toISOString()
            });*/
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–∞—Ö
        if (update instanceof Api.UpdateDeleteChannelMessages) {
            update.messages.forEach((msgId: number) => {
                const updatedMessage = markMessageAsRemoved(msgId);
                if (updatedMessage) {
                    console.log("üì® –£–¥–∞–ª–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è:", updatedMessage);
                }
            });
            saveMessageToFile({
                type: "deleted",
                channelId: update.channelId.toString(),
                messages: update.messages,
                timestamp: new Date().toISOString()
            });
        }
    });
};