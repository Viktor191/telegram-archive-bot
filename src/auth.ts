import { TelegramClient } from "telegram";
import { StringSession } from "telegram/sessions";
import { API_ID, API_HASH, STRING_SESSION } from "./config/env";
import readline from "readline";

// –í–≤–æ–¥ —Å —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
});

const ask = (question: string): Promise<string> => {
    return new Promise((resolve) => rl.question(question, resolve));
};

const stringSession = new StringSession("");

(async () => {
    console.log("üîê –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...");

    const client = new TelegramClient(stringSession, Number(API_ID), API_HASH, {
        connectionRetries: 5,
    });

    await client.start({
        phoneNumber: async () => await ask("üì± –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: "),
        password: async () => await ask("üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω): "),
        phoneCode: async () => await ask("üì® –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram: "),
        onError: (err: unknown) => console.log("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", err),
    });

    console.log("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!");
    console.log("üìù –í–∞—à–∞ stringSession:\n");
    console.log(client.session.save());

    rl.close();
    await client.disconnect();
})();